Typescript
    - Superset of javascript.
    - A language build up on javascript(Not a new language).
    - Added new features and advantages to JS.
    - Its a compiler also.
    - Features are compiled to JS workarounds and possible errors are thrown.

Advantages
    - Types are added.
    - Interface and generics ara available.
    - Next generation JS features are available.
    - Meta programming features such as decorators are available.
    - Rich configuration options.
    - Modern tooling that helps even in non ts projects.

Core Data Types
    - number : All numbers, no differentiation between integer or float.
    - string : All text values.
    - boolean : Just true/false, no truthy and falsy values.


Important Note - The core primitive types in Typescript as all lowercase (string, number).

Type Inference
    - In typescript there are several places where type inference is used.
    - It provide type information when there is no explicit type annotation.
    - example : let x = 3;
    - The type of x variable is inferred to be number.

Objects
    - We can provide generic object type by adding "object" type to the variable.
    - If we want to provide proper object which contains member then we can put {} as type.
    - {} - Specialized object type notation.
    - Object types can also be created for nested Objects.

Array
    - Any javascript array, type can be flexible or strict(regarding the element types).
    - const arr:type[]

Tuple
    - If we want to restrict array with ref to number of elements and its types then we can use tuple.
    - In tuple we specify the type for each member.
    - let role:[string, number] = ["Pravin", 1]
    - pus() : this method is exceptionally works on tuple, ts cannot catch this error.

Enum
    - Automatically enumerated global constant identifiers.
    - 